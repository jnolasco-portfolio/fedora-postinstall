- hosts: localhost
  become: true
  tasks:
    - name: Install unzip
      dnf:
        name: unzip
        state: present

- hosts: localhost
  become: false 
  tasks:
    - name: Install GNOME Shell extensions
      shell: |
        set -e
        GNOME_SHELL_VERSION=$(gnome-shell --version | cut -d ' ' -f 3 | cut -d '.' -f 1)
        EXTENSIONS=(
          "user-theme@gnome-shell-extensions.gcampax.github.com"
          "blur-my-shell@aunetx"
          "clipboard-history@alexsaveau.dev"
          "dash-to-dock@micxgx.gmail.com"
          "appindicatorsupport@rgcjonas.gmail.com"
          "gnome-ui-tune@itstime.tech"
          "compiz-alike-magic-lamp-effect@hermes83.github.com"
          "caffeine@patapon.info"
          "drive-menu@gnome-shell-extensions.gcampax.github.com"
          "system-monitor@gnome-shell-extensions.gcampax.github.com"
          "gnome-shell-go-to-last-workspace@github.com"
          "tilingshell@ferrarodomenico.com"
          "panel-workspace-scroll@polymeilex.github.io"
          "places-menu@gnome-shell-extensions.gcampax.github.com"
          "apps-menu@gnome-shell-extensions.gcampax.github.com"
          "background-logo@fedorahosted.org"
          "launch-new-instance@gnome-shell-extensions.gcampax.github.com"
          "window-list@gnome-shell-extensions.gcampax.github.com"
        )

        for uuid in "${EXTENSIONS[@]}"; do
          EXTENSION_DIR_USER="${HOME}/.local/share/gnome-shell/extensions/${uuid}"
          EXTENSION_DIR_SYSTEM="/usr/share/gnome-shell/extensions/${uuid}"
          if [ -d "$EXTENSION_DIR_USER" ] || [ -d "$EXTENSION_DIR_SYSTEM" ]; then
            echo "Extension ${uuid} is already installed. Enabling."
            gnome-extensions enable "${uuid}"
            continue
          fi

          echo "Installing ${uuid}"
          INFO_URL="https://extensions.gnome.org/extension-info/?uuid=${uuid}&shell_version=${GNOME_SHELL_VERSION}"
          DOWNLOAD_URL_SUFFIX=$(curl -s "${INFO_URL}" | grep -oP '(?<="download_url": ")[^"]*')

          if [ -z "$DOWNLOAD_URL_SUFFIX" ] || [ "$DOWNLOAD_URL_SUFFIX" == "null" ]; then
            echo "Could not get download url for ${uuid} for shell version ${GNOME_SHELL_VERSION}"
            GNOME_SHELL_VERSION_FALLBACK=$((${GNOME_SHELL_VERSION} - 1))
            echo "Trying with fallback shell version ${GNOME_SHELL_VERSION_FALLBACK}"
            INFO_URL="https://extensions.gnome.org/extension-info/?uuid=${uuid}&shell_version=${GNOME_SHELL_VERSION_FALLBACK}"
            DOWNLOAD_URL_SUFFIX=$(curl -s "${INFO_URL}" | grep -oP '(?<="download_url": ")[^"]*')
            if [ -z "$DOWNLOAD_URL_SUFFIX" ] || [ "$DOWNLOAD_URL_SUFFIX" == "null" ]; then
              echo "Could not get download url for ${uuid} with fallback version either. Skipping."
              continue
            fi
          fi

          DOWNLOAD_URL="httpshttps://extensions.gnome.org${DOWNLOAD_URL_SUFFIX}"
          
          TMP_DIR=$(mktemp -d)
          
          echo "Downloading from ${DOWNLOAD_URL}"
          curl -L -s "${DOWNLOAD_URL}" -o "${TMP_DIR}/extension.zip"
          
          mkdir -p "$EXTENSION_DIR_USER"

          unzip -q "${TMP_DIR}/extension.zip" -d "$EXTENSION_DIR_USER"
          
          rm -rf "${TMP_DIR}"
          
          echo "Enabling ${uuid}"
          gnome-extensions enable "${uuid}"
        done
      args:
        executable: /bin/bash